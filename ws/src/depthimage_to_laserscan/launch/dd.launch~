<launch>

 <!-- "camera" should uniquelyidentify the device. All topics are pushed down

      into the "camera" namespace, and it is prepended to tf frameids. -->

 <arg name="camera"     default="camera"/>

 <arg name="publish_tf" default="true"/>

 

 <!-- Factory-calibrated depth registration -->

 <arg name="depth_registration"              default="true"/>

 <arg     if="$(arg depth_registration)" name="depth" value="depth_registered" />

 <arg unless="$(arg depth_registration)" name="depth" value="depth" />

 

  <!--Driver parameters -->

 <arg name="color_depth_synchronization"     default="false" />

 <arg name="auto_exposure"                   default="true"/>

 <arg name="auto_white_balance"              default="true" />

 

 <!-- Processing Modules -->

  <arg name="rgb_processing"                 default="true"/>

 <arg name="ir_processing"                  default="true"/>

 <arg name="depth_processing"                default="true"/>

 <arg name="depth_registered_processing"     default="true"/>

 <arg name="disparity_processing"            default="true"/>

 <arg name="disparity_registered_processing" default="true"/>

 <arg name="scan_processing"                 default="true"/>

 

 <!-- Worker threads for the nodelet manager -->

 <arg name="num_worker_threads" default="4" />

<include file="$(find openni_launch)/launch/openni.launch">

</include>

 

 <!-- Laserscan topic -->

 <arg name="scan_topic" default="scan"/>

 <!--                       Laserscan

    This uses lazy subscribing, so will not activate until scan isrequested.

  -->

 <group if="$(arg scan_processing)">

   <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan" args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet $(arg camera)/$(arg camera)_nodelet_manager">

     <!-- Pixel rows to use to generate the laserscan. For each column,the scan will

          return the minimum value for those pixels centered vertically in theimage. -->

     <param name="scan_height" value="10"/>

     <param name="output_frame_id" value="/$(arg camera)_depth_frame"/>

     <param name="range_min" value="0.45"/>

     <remap from="image" to="$(arg camera)/$(arg depth)/image_raw"/>

     <remap from="scan" to="$(arg scan_topic)"/>

     <remap from="$(arg camera)/image" to="$(arg camera)/$(arg depth)/image_raw"/>

     <remap from="$(arg camera)/scan" to="$(arg scan_topic)"/>

   </node>

 </group>

</launch>
